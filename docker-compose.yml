
services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: task-management-db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-task_management}
      TZ: UTC
      PGTZ: UTC
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - task-network

  # Go application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task-management-app
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-task_management}
      JWT_SECRET: ${JWT_SECRET:-kakikukuat}
      PORT: ${PORT:-8080}
      GIN_MODE: ${GIN_MODE:-debug}
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app:cached
      - /app/vendor
    command: ${APP_COMMAND:-./main}
    restart: unless-stopped
    networks:
      - task-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local

networks:
  task-network:
    driver: bridge